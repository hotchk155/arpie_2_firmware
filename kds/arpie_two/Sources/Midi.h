/*
 * Midi.h
 *
 *  Created on: 17 Feb 2017
 *      Author: Jason
 */

#ifndef SOURCES_MIDI_H_
#define SOURCES_MIDI_H_

enum {
	MIDI_MSG_NONE,
	MIDI_MSG_REALTIME,
	MIDI_MSG_SYSEXBYTE,
	MIDI_MSG_0PARAM,
	MIDI_MSG_1PARAM,
	MIDI_MSG_2PARAM
};

enum {
	MIDI_CH_NOTE_OFF = 0x80,
	MIDI_CH_NOTE_ON = 0x90,
	MIDI_CH_POLY_PRESS = 0xA0,
	MIDI_CH_CTRL_CHANGE = 0xB0,
	MIDI_CH_PROG_CHANGE = 0xC0,
	MIDI_CH_CHAN_PRESS = 0xD0,
	MIDI_CH_PITCH_BEND = 0xE0,

	MIDI_SC_SYSEX_BEGIN = 0xF0,
	MIDI_SC_MTC_QUARTER_FRAME = 0xF1,
	MIDI_SC_SPP = 0xF2,
	MIDI_SC_SONG_SELECT = 0xF3,
	MIDI_SC_TUNE_REQUEST = 0xF6,
	MIDI_SC_SYSEX_END = 0xF7,

	MIDI_RT_CLOCK_TICK = 0xF8,
	MIDI_RT_CLOCK_START = 0xFA,
	MIDI_RT_CLOCK_CONTINUE = 0xFB,
	MIDI_RT_CLOCK_STOP = 0xFC,
	MIDI_RT_ACTIVE_SENSING = 0xFE,
	MIDI_RT_RESET = 0xFF,

	MIDI_CC_ALL_SOUND_OFF = 120,
	MIDI_CC_ALL_RESET = 121,
	MIDI_CC_LOCAL_CONTROL = 122,
	MIDI_CC_ALL_NOTES_OFF = 123,
	MIDI_CC_OMNI_OFF = 124,
	MIDI_CC_OMNI_ON = 125,
	MIDI_CC_MONO_ON = 126,
	MIDI_CC_MONO_OFF = 127,
};
typedef struct {
	byte type;
	byte status;
	byte param1;
	byte param2;
} MIDI_MSG;



#endif /* SOURCES_MIDI_H_ */
